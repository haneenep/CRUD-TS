<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Notes</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f7f7f7;
            color: #333;
            line-height: 1.6;
            padding: 20px;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 40px 20px;
        }

        h1 {
            font-size: 2.5rem;
            font-weight: 300;
            text-align: center;
            margin-bottom: 40px;
            color: #2c3e50;
        }

        .note-input {
            background: white;
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
            padding: 30px;
            margin-bottom: 40px;
            transition: transform 0.3s ease;
        }

        .note-input:hover {
            transform: translateY(-5px);
        }

        input, textarea {
            width: 100%;
            padding: 15px;
            margin-bottom: 15px;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            font-size: 16px;
            transition: all 0.3s ease;
        }

        input:focus, textarea:focus {
            outline: none;
            border-color: #3498db;
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
        }

        textarea {
            height: 150px;
            resize: none;
        }

        button {
            background: #3498db;
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 8px;
            font-size: 16px;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 100%;
        }

        button:hover {
            background: #5abdff;
        }

        .notes-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
        }

        .notes-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
        }

        .note {
            background: white;
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
            display: flex;
            flex-direction: column;
            word-wrap: break-word;
        }

        .note h2 {
            font-size: 1.2rem;
            margin-bottom: 10px;
            color: #2c3e50;
        }

        .note p {
            color: #666;
            font-size: 0.95rem;
            flex-grow: 1;
            overflow: hidden;
            text-overflow: ellipsis;
            display: -webkit-box;
            -webkit-box-orient: vertical;
        }

        .note-actions {
            display: flex;
            justify-content: space-between;
            margin-top: 10px;
        }

        .note-actions button {
            padding: 5px 10px;
            font-size: 0.8rem;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .view-btn { background-color: #3498db; color: white; }
        .edit-btn { background-color: #ffbf59; color: white; }
        .delete-btn { background-color: #ff6352; color: white; }

        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4);
        }

        .modal-content {
            background-color: #fefefe;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 600px;
            border-radius: 12px;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

        .note {
            background: white;
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
        }

        .note:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .note h2 {
            font-size: 1.2rem;
            margin-bottom: 10px;
            color: #2c3e50;
        }

        .note p {
            color: #666;
            font-size: 0.95rem;
        }

        .empty-state {
            text-align: center;
            color: #7f8c8d;
            margin-top: 40px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Notes</h1>
        
        <div class="note-input">
            <input type="text" placeholder="Note title" id="noteTitle">
            <textarea placeholder="Write your thoughts..." id="noteContent"></textarea>
            <button onclick="addNote()">Add Note</button>
        </div>

        <div class="notes-grid" id="notesGrid">
            <% if (allNotes.length === 0){ %>
                <div class="empty-state" id="emptyState">
                    Your notes will appear here
                </div>
            <% }else{ %>
                <% allNotes.forEach(function(note) { %>
                    <div class="note" data-id="<%= note._id %>">
                        <h2><%= note.title %></h2>
                        <p><%= note.content %></p>
                        <div class="note-actions">
                            <button class="edit-btn" onclick="editNote('<%= note._id %>')">Edit</button>
                            <button class="delete-btn" onclick="deleteNote('<%= note._id %>')">Delete</button>
                        </div>
                    </div>
                <% }); %>
            <% } %>
        </div>
    </div>

    <div id="noteModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2 id="modalTitle"></h2>
            <p id="modalContent"></p>
            <div id="editForm" style="display: none;">
                <input type="text" id="editTitle">
                <textarea id="editContent"></textarea>
                <button onclick="updateNote()">Update Note</button>
            </div>
        </div>
    </div>

    <script>
        const notesGrid = document.getElementById('notesGrid');
        const emptyState = document.getElementById('emptyState');
        const modal = document.getElementById('noteModal');
        const closeModal = document.getElementsByClassName('close')[0];
        let noteCount = JSON.parse('<%= JSON.stringify(allNotes.length) %>'.replace(/&#34;/g,'"'));
        let currentNoteId = null;

        // add fn
        async function addNote(){
            const title = document.getElementById('noteTitle').value;
            const content = document.getElementById('noteContent').value;
            
            if (!title && !content) return;
            
            try {
                const response = await fetch('/addNotes',{
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ title, content }),
                });

                if (!response.ok) {
                    throw new Error('Failed to add note');
                }

                const newNote = await response.json();
                
                if (noteCount === 0) {
                    emptyState.style.display = 'none';
                }
                
                const note = createNoteElement(newNote);
                notesGrid.prepend(note);
                noteCount++;
                
                gsap.from(note,{
                    opacity: 0,
                    y: 20,
                    duration: 0.5,
                    ease: "power2.out"
                });
                
                document.getElementById('noteTitle').value = '';
                document.getElementById('noteContent').value = '';
            } catch (error) {
                console.error('Error adding note:', error);
                alert('Failed to add note. Please try again.');
            }
        }

        function createNoteElement(note){
            const noteElement = document.createElement('div');
            noteElement.className = 'note';
            noteElement.dataset.id = note._id;
            noteElement.innerHTML = `
                <h2>${note.title || 'Untitled Note'}</h2>
                <p>${note.content || 'No content'}</p>
                <div class="note-actions">
                    <button class="edit-btn" onclick="editNote('${note._id}')">Edit</button>
                    <button class="delete-btn" onclick="deleteNote('${note._id}')">Delete</button>
                </div>
            `;
            return noteElement;
        }

        function editNote(id){
            currentNoteId = id;
            const note = document.querySelector(`.note[data-id="${id}"]`);
            document.getElementById('editTitle').value = note.querySelector('h2').textContent;
            document.getElementById('editContent').value = note.querySelector('p').textContent;
            document.getElementById('editForm').style.display = 'block';
            modal.style.display = 'block';
        }

        // edit fn
        async function updateNote(){
            const title = document.getElementById('editTitle').value;
            const content = document.getElementById('editContent').value;
            
            try {
                const response = await fetch(`/editNotes/${currentNoteId}`,{
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ title, content }),
                });

                if (!response.ok){
                    throw new Error('Failed to update note');
                }

                const updatedNote = await response.json();
                const noteElement = document.querySelector(`.note[data-id="${currentNoteId}"]`);
                noteElement.querySelector('h2').textContent = updatedNote.title;
                noteElement.querySelector('p').textContent = updatedNote.content;
                
                modal.style.display = 'none';
            } catch (error){
                console.error('Error updating note:', error);
                alert('Failed to update note. Please try again.');
            }
        }

        // delete fn
        async function deleteNote(id){
            if (!confirm('Are you sure you want to delete this note?')) return;
            
            try {
                const response = await fetch(`/deleteNote/${id}`,{
                    method: 'DELETE',
                });

                if (!response.ok) {
                    throw new Error('Failed to delete note');
                }

                const noteElement = document.querySelector(`.note[data-id="${id}"]`);
                noteElement.remove();
                noteCount--;

                if (noteCount === 0) {
                    emptyState.style.display = 'block';
                }
            } catch (error) {
                console.error('Error deleting note:', error);
                alert('Failed to delete note. Please try again.');
            }
        }

        closeModal.onclick = function(){
            modal.style.display = 'none';
        }

        window.onclick = function(event){
            if (event.target == modal) {
                modal.style.display = 'none';
            }
        }
    </script>
</body>
</html>